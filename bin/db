#!/usr/bin/env node

var fs = require('fs');
var path   = require('path');
var _   = require('lodash');
var mysql = require('mysql2');
var Promise = require("bluebird");
var config = require('../config/config.js')
var yargs = require('yargs');
yargs.usage('Usage: $0 <command> [options]')
  .command('init', '初始化数据库', {
    dbpassword: {
      alias: 'dbpassword',
      type: 'string'
    }
  })
  .command('upgrade', '升级数据库', {
    dbpassword: {
      alias: 'dbpassword',
      type: 'string'
    }
  })
  .example('$0 init --dbname duqin --dbhost localhost --dbuser root --dbpassword 123456 --dbport 3306 --force', '初始化code-push-server数据库')
  .example('$0 upgrade --dbname duqin --dbhost localhost --dbuser root --dbpassword 123456 --dbport 3306', '升级code-push-server数据库')
  .default({dbname: 'duqin', dbhost: 'localhost', dbuser: 'root', dbpassword: null})
  .help('h')
  .alias('h', 'help');

var argv = yargs.argv;
var command = argv._[0];
var dbname = argv.dbname ? argv.dbname : config.db.database;
var dbhost = argv.dbhost ? argv.dbhost : config.db.host;
var dbuser = argv.dbuser ? argv.dbuser : config.db.username;
var dbport = argv.dbport ? argv.dbport : config.db.port;
var dbpassword = argv.dbpassword ? argv.dbpassword : config.db.password;

if (command == 'init') {
  var connection2;
  var connection = mysql.createConnection({
      host: dbhost,
      user: dbuser,
      password: dbpassword,
      port: dbport
  });
  var createDatabaseSql = argv.force ? `CREATE DATABASE IF NOT EXISTS ${dbname}` :
      `CREATE DATABASE ${dbname}`;
  Promise.promisifyAll(connection);
  connection.connect();
  connection.queryAsync(createDatabaseSql)
  .then(function(){
      connection2 = mysql.createConnection({
          host: dbhost,
          user: dbuser,
          password: dbpassword,
          database: dbname,
          multipleStatements: true,
          port: dbport
      });
      connection2.connect();
      Promise.promisifyAll(connection2);
      return connection2;
  })
  .then(function(connection2){
      var sql = fs.readFileSync(path.resolve(__dirname, '../sql/duqin-all.sql'), 'utf-8');
      return connection2.queryAsync(sql);
  })
  .then(function(){
      console.log('success.');
  })
  .catch(function(e){
      console.log(e);
  })
  .finally(function(){
      if(connection) connection.end();
      if(connection2) connection2.end()
  });
} else {
  yargs.showHelp();
}